$sound-spacing: 8px;
$sound-height: 100px;

.sound {
  display: flex;
  flex-direction: row;

  align-items: center;

  // 50%, but accounted for padding and spacing between sounds
  width: calc(50% - #{$scene-sound-container-padding + $sound-spacing});
  height: $sound-height;

  border: 1px solid $color-black;
  border-radius: 2px;

  &:nth-of-type(odd) {
    margin-right: $sound-spacing;
  }
  margin-bottom: $sound-spacing;
}

// Split into three sections: left, toggles and volume

$left-width: 60%;
$toggles-width: 26%;
$volume-width: 14%;

/* NAME AND RANDOMNESS */
.left {
  // Further split into top and bottom: name and randomness
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin-left: 5px;

  width: $left-width;
  height: 100%;

  $name-height: 50%;
  $randomness-height: (100% - $name-height);

  .name,
  .randomness {
    // Center both boxes
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .name {
    height: $name-height;
    padding-bottom: 8px;
  }

  .randomness {
    height: $randomness-height;
    width: 90%;

    .progressBar {
      width: 100%;
      height: 50%;
    }
  }
}

/* TOGGLES */
.toggles {
  width: $toggles-width;
  height: 100%;
  position: relative;

  // padding: 5px 0;
  margin-left: 5px;

  // Order elements and center them
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;

  // $button-size: 30px;

  .muteToggle,
  .autoplayToggle,
  .playToggle,
  .settingsToggle {
    height: 50%;
    width: 50%;

    border-radius: 0;
    background-color: transparent;
    transition: 0.3s $ease-out-quart;
  }

  .muteToggle,
  .autoplayToggle {
    font-size: 1rem;
    font-family: $font-secondary;
  }

  .minWidthFix {
    min-width: 0 !important;
  }

  $div-border: 1px solid lighten($color-black, 65%);

  // Border styles
  div {
    border-left: $div-border;
    border-bottom: $div-border;
  }
  div:nth-of-type(1),
  div:nth-of-type(2) {
    border-top: $div-border;
  }
  div:nth-of-type(2),
  div:nth-of-type(4) {
    border-right: $div-border;
  }

  // Individual styles
  // adding the 'active' class will make the button look active
  .muteToggle {
    &.active {
      background-color: lighten($color-red, 10%);
    }
  }

  .autoplayToggle {
    &.active {
      background-color: lighten($color-green, 10%);
    }
  }

  .playToggle {
    // "playing"
    &.active {
      background-color: lighten($color-blue, 40%);
    }
  }

  // .settingsToggle {
  //
  // }
}

/* VOLUME SLIDER */
.volume {
  width: $volume-width;
}
