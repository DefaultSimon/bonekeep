$sound-spacing: 8px;

$base-height: 100px;
$bottom-bar-height: 5px;

$sound-height: $base-height + $bottom-bar-height;

.sound {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;

  align-items: center;

  // 50%, but accounted for padding and spacing between sounds
  width: calc(50% - #{$scene-sound-container-padding + $sound-spacing});
  height: $sound-height;

  &:nth-of-type(odd) {
    margin-right: $sound-spacing;
  }
  margin-bottom: $sound-spacing;

  // Box color
  box-shadow: 0 1px 3px 1px darken($color-white, 28%);
  transition: box-shadow 0.2s ease-in-out;
  border-radius: 2px;

  &:hover {
    box-shadow: 0 1px 3px 1px darken($color-white, 40%);
  }
}

// Split into four sections: left, toggles, volume and bottom

$left-width: 60%;
$toggles-width: 26%;
$volume-width: 14%;

/* NAME AND RANDOMNESS */
.left {
  $left-margin: 5px;

  // Further split into top and bottom: name and randomness
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin-left: $left-margin;

  width: calc(#{$left-width} - #{$left-margin});
  height: $base-height;

  $name-height: 50%;
  $randomness-height: (100% - $name-height);

  .name,
  .randomness {
    // Center both boxes
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .name {
    height: $name-height;
    padding-bottom: 8px;
  }

  .randomness {
    height: $randomness-height;
    width: 90%;

    .progressBar {
      width: 100%;
      height: 50%;
    }
  }
}

/* TOGGLES */
.toggles {
  $toggles-margin: 5px;

  height: $base-height;
  position: relative;

  margin-left: $toggles-margin;
  width: calc(#{$toggles-width} - #{$toggles-margin});

  // Order elements and center them
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;

  // $button-size: 30px;

  .muteToggle,
  .autoplayToggle,
  .playToggle,
  .settingsToggle {
    height: 50%;
    width: 50%;

    border-radius: 0;
    background-color: transparent;
    transition: 0.3s $ease-out-quart;
  }

  .muteToggle,
  .autoplayToggle {
    font-size: 1rem;
    font-family: $font-secondary;
  }

  .minWidthFix {
    min-width: 0 !important;
  }

  .buttonStyleBoxShadow {
    border: none !important;

    background-color: transparentize($color-black, 1);
    box-shadow: 0 0 1px 0 darken($color-white, 10%);

    transition: 0.14s ease;

    &:hover {
      background-color: transparentize($color-black, 0.98);
      box-shadow: 0 0 4px 0 darken($color-white, 18%);
    }
  }

  $div-border: 1px solid lighten($color-black, 65%);

  // Border styles
  div {
    border-left: $div-border;
    border-bottom: $div-border;
  }
  div:nth-of-type(1),
  div:nth-of-type(2) {
    border-top: $div-border;
  }
  div:nth-of-type(2),
  div:nth-of-type(4) {
    border-right: $div-border;
  }

  // Individual styles
  // adding the 'active' class will make the button look active
  .muteToggle {
    &.active {
      background-color: lighten($color-red, 16%);
    }
  }

  .autoplayToggle {
    &.active {
      background-color: lighten($color-green, 14%);
    }
  }

  .playToggle {
    // "playing"
    &.active {
      background-color: lighten($color-blue, 40%);
    }
  }

  // .settingsToggle {
  //
  // }
}

/* VOLUME SLIDER */
.volume {
  width: $volume-width;
}

.bottom {
  width: 100%;
  height: $bottom-bar-height;

  .randomnessBar {
    height: 2px;
    background-color: lighten($color-red, 18%);

    width: 0;
  }

  .soundProgressBar {
    height: 3px;
    background-color: lighten($color-primary-light, 2%);

    width: 0;
  }
}
